server:
  port: ${PORT:8080}

spring:
  application:
    name: url-service
  
  # CORS Configuration for Vercel frontend
  web:
    cors:
      allowed-origins: 
        - ${FRONTEND_URL:http://localhost:3000}
        - "https://*.vercel.app"
        - "https://your-domain.com"
      allowed-methods: 
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/urlshortener}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true

  cache:
    type: simple

# Google OAuth Configuration
google:
  client:
    id: ${GOOGLE_CLIENT_ID}
    secret: ${GOOGLE_CLIENT_SECRET}
  redirect:
    uri: ${GOOGLE_REDIRECT_URI:https://your-vercel-app.vercel.app/auth/callback}

# Razorpay Payment Configuration
razorpay:
  key:
    id: ${RAZORPAY_KEY_ID}
    secret: ${RAZORPAY_KEY_SECRET}

# Application Configuration
app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}
  
# Performance Configuration for High Traffic
spring:
  datasource:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    properties:
      hibernate:
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true

logging:
  level:
    com.urlshortener: INFO
    org.springframework.security: DEBUG

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized