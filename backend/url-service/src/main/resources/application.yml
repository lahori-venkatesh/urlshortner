server:
  port: ${PORT:8080}
  # Production optimizations
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    connection-timeout: 20000
    max-connections: 8192
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

spring:
  application:
    name: pebly-url-service
  
  # CORS Configuration
  web:
    cors:
      allowed-origins: 
        - ${FRONTEND_URL:http://localhost:3000}
        - "https://pebly.vercel.app"
        - "https://*.vercel.app"
        - "https://urlshortner-mrrl.onrender.com"
      allowed-methods: 
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - PATCH
      allowed-headers: 
        - "*"
        - "Authorization"
        - "Content-Type"
        - "X-Requested-With"
      allow-credentials: true
      exposed-headers:
        - "Authorization"
  
  # MongoDB Configuration - Production Ready with Team Collaboration
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: ${MONGODB_DATABASE:pebly-database}
      auto-index-creation: false
      # Connection pool settings for high performance
      options:
        max-connection-pool-size: 100
        min-connection-pool-size: 10
        max-connection-idle-time: 600000  # 10 minutes
        max-connection-life-time: 1800000  # 30 minutes
        connect-timeout: 10000  # 10 seconds
        socket-timeout: 30000   # 30 seconds
        server-selection-timeout: 30000  # 30 seconds
        max-wait-time: 30000    # 30 seconds
        heartbeat-frequency: 10000  # 10 seconds
    
    # Redis Configuration - Production Ready (Optional)
    redis:
      host: ${REDIS_HOST:}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      database: 0
      lettuce:
        pool:
          max-active: 50
          max-idle: 20
          min-idle: 5
          max-wait: 3000ms
        shutdown-timeout: 100ms

  cache:
    type: ${CACHE_TYPE:simple}  # Use simple cache by default, redis in production
    redis:
      time-to-live: 3600000  # 1 hour
      cache-null-values: false
      key-prefix: "pebly:"
      use-key-prefix: true
  
  # File upload configuration
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}
      enabled: true
  
  # Async configuration for high performance
  task:
    execution:
      pool:
        core-size: 10
        max-size: 50
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: "async-"

# Google OAuth Configuration
google:
  client:
    id: ${GOOGLE_CLIENT_ID:}
    secret: ${GOOGLE_CLIENT_SECRET:}
  redirect:
    uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080/auth/callback}

# Razorpay Payment Configuration
razorpay:
  key:
    id: ${RAZORPAY_KEY_ID:}
    secret: ${RAZORPAY_KEY_SECRET:}

# Cloudflare Configuration (for SSL provisioning)
cloudflare:
  api:
    token: ${CLOUDFLARE_API_TOKEN:}
  zone:
    id: ${CLOUDFLARE_ZONE_ID:}

# Application Configuration
app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}
  shorturl:
    domain: ${SHORT_URL_DOMAIN:https://pebly.vercel.app}
  
  # Custom Domain Configuration
  domain:
    verification:
      subdomain: verify.bitaurl.com
      max-attempts: 5
      retry-interval: 300  # 5 minutes
      cleanup-interval: 3600  # 1 hour
    ssl:
      provider: ${SSL_PROVIDER:CLOUDFLARE}  # CLOUDFLARE or LETS_ENCRYPT
      auto-provision: true
      renewal-threshold: 30  # days before expiry
    rate-limit:
      domain-add: 20  # per day
      verification: 5  # per hour
  
  # Rate limiting configuration
  rate-limit:
    enabled: true
    requests-per-minute: 60
    requests-per-hour: 1000
    requests-per-day: 10000
  
  # Analytics configuration
  analytics:
    batch-size: 100
    flush-interval: 5000  # 5 seconds
    enable-real-time: true
  
  # Caching configuration
  cache:
    url-ttl: 3600  # 1 hour
    analytics-ttl: 300  # 5 minutes
    geo-ttl: 86400  # 24 hours
  
  # Security configuration
  security:
    enable-ip-whitelist: false
    max-password-attempts: 5
    password-attempt-window: 300  # 5 minutes

# Logging Configuration - Production
logging:
  level:
    com.urlshortener: INFO
    org.springframework.security: WARN
    org.springframework.data.mongodb: WARN
    org.springframework.cache: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:./logs/application.log}
    max-size: 100MB
    max-history: 30

# Actuator configuration - Production monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,caches,env
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
    caches:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        cache.gets: true
        cache.puts: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
        cache.gets: 0.5, 0.95, 0.99
      sla:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms
        cache.gets: 1ms, 5ms, 10ms, 50ms
    tags:
      application: pebly-url-service
      environment: ${ENVIRONMENT:development}

# Connection pool monitoring
spring.jpa.properties.hibernate.generate_statistics: true